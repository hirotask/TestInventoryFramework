plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "7.1.2"

}

group = 'tech.erudo.mc.test.inventoryframework'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url = "https://repo.dmulloy2.net/repository/public/"
    }

    maven {
        name = "md_5-public"
        url = "https://repo.md-5.net/content/groups/public/"
    }

}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.18.1-R0.1-SNAPSHOT'
    implementation 'com.github.stefvanschie.inventoryframework:IF:0.10.7'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    compileOnly 'dev.jorel:commandapi-annotations:8.5.1'
    annotationProcessor 'dev.jorel:commandapi-annotations:8.5.1'

}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    relocate 'com.github.stefvanschie.inventoryframework', 'tech.erudo.mc.test.inventoryframework.testinventoryframework.inventoryframework'
}
